---
- hosts: all
  vars:
    base_dir: "Developing"
    project_name: "1password-connect"
    service_dir: "{{ base_dir }}/{{ project_name }}"
    docker_api_service_name: "op-connect-api"
  vars_prompt:
    - name: op_token_name
      prompt: What should be the token name in 1Password
      default: "wanli"
      private: false
    - name: domain
      prompt: Which domain would you like to use
      default: "op-connect.tomy.me"
      private: false

  tasks:
    - name: Create service directory
      file:
        path: "{{ service_dir }}"
        state: directory

    - name: Create docker-compose.yml
      copy:
        dest: "{{ service_dir }}/docker-compose.yml"
        content: |
          version: "3.4"
          services:
            {{ docker_api_service_name }}:
              image: 1password/connect-api:latest
              restart: always
              volumes:
                - "./1password-credentials.json:/home/opuser/.op/1password-credentials.json"
                - "data:/home/opuser/.op/data"
            op-connect-sync:
              image: 1password/connect-sync:latest
              restart: always
              volumes:
                - "./1password-credentials.json:/home/opuser/.op/1password-credentials.json"
                - "data:/home/opuser/.op/data"

          networks:
            default:
              external: true
              name: "nginx-proxy-manager"

          volumes:
            data:

    - name: Check if 1password-credentials.json exists
      stat:
        path: 1password-credentials.json
      register: credentials_file

    - name: Create credentials
      when: not credentials_file.stat.exists
      delegate_to: localhost
      shell: "op connect server create {{ op_token_name }}"

    - name: Upload credentials to server
      when: not credentials_file.stat.exists
      copy:
        src: 1password-credentials.json
        dest: "{{ service_dir }}/1password-credentials.json"
        mode: "0400"

    - name: Discard local credentials
      when: not credentials_file.stat.exists
      local_action: file path=1password-credentials.json state=absent

    - name: Start services
      command:
        chdir: "{{ service_dir }}"
        cmd: docker compose up --detach

    - name: Setup DNS record
      import_tasks: ../utils/cloudflare_dns.yml

    # TODO: Add service to NPM

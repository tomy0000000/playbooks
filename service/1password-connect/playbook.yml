# https://developer.1password.com/docs/connect/get-started#step-2-deploy-1password-connect-server
---
- name: Playbook to deploy 1Password Connect
  hosts: all
  vars:
    base_dir: Developing
    project_name: 1password-connect
    service_dir: "{{ base_dir }}/{{ project_name }}"
  vars_prompt:
    - name: docker_network
      prompt: Enter the name of the docker network to use
      default: nginx-proxy-manager
    - name: op_token_name
      prompt: What should be the token name in 1Password
      default: wanli
      private: false
    - name: domain
      prompt: What domain would you like to use
      default: op-connect.tomy.me
      private: false

  tasks:
    - name: Create service directory
      ansible.builtin.file:
        path: "{{ service_dir }}"
        state: directory
        mode: "0755"

    - name: Create docker-compose.yml
      ansible.builtin.copy:
        src: ./docker-compose.yml
        dest: "{{ service_dir }}/docker-compose.yml"
        mode: "0755"

    - name: Add networks block if docker_network is set
      when: docker_network is defined
      ansible.builtin.blockinfile:
        path: "{{ service_dir }}/docker-compose.yml"
        block: |
          networks:
            default:
              external: true
              name: "{{ docker_network }}"

    - name: Check if 1password-credentials.json exists
      ansible.builtin.stat:
        path: "{{ service_dir }}/1password-credentials.json"
      register: credentials_file

    - name: Create credentials
      when: not credentials_file.stat.exists
      delegate_to: localhost
      ansible.builtin.command: op connect server create {{ op_token_name }}
      changed_when: false

    - name: Upload credentials to server
      when: not credentials_file.stat.exists
      ansible.builtin.copy:
        src: 1password-credentials.json
        dest: "{{ service_dir }}/1password-credentials.json"
        mode: "0400"

    - name: Discard local credentials
      when: not credentials_file.stat.exists
      delegate_to: localhost
      ansible.builtin.file:
        path: 1password-credentials.json
        state: absent

    - name: Pull images
      ansible.builtin.command:
        chdir: "{{ service_dir }}"
        cmd: docker compose pull
      changed_when: false

    - name: Start services
      ansible.builtin.command:
        chdir: "{{ service_dir }}"
        cmd: docker compose up --detach
      changed_when: false

    - name: Setup DNS record
      ansible.builtin.import_tasks: ../../utils/cloudflare-dns-cname.yml

    # TODO: Add service to NPM
